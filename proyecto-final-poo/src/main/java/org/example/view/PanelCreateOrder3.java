/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.example.view;

import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.example.controller.OrderController;
import org.example.controller.OrderLineController;
import org.example.controller.ProductController;
import org.example.controller.ViewController;
import org.example.model.Order;
import org.example.model.OrderLine;
import org.example.model.Warehouse;

/**
 *
 * @author ericp
 */
public class PanelCreateOrder3 extends javax.swing.JPanel {
    private ViewController viewController;
    private OrderLineController orderLineController;
    private ProductController productController;
    private OrderController orderController;
    private Warehouse warehouseOrig;
    private Warehouse warehouseDest;
    private String cuitCustomer;
    private String cuitCarrier;
    private Order order;
    
    /**
     * Creates new form PanelCreateOrder3
     */
    public PanelCreateOrder3(String cuitCustomer, String cuitCarrier, Warehouse warehouseOrig, Warehouse warehouseDest) {
        this.viewController = new ViewController();
        this.orderLineController = new OrderLineController();
        this.productController = new ProductController();
        this.orderController = new OrderController();
        this.order = new Order();
        this.cuitCarrier = cuitCarrier;
        this.cuitCustomer = cuitCustomer;
        this.warehouseOrig = warehouseOrig;
        this.warehouseDest = warehouseDest;
        initComponents();
        this.setSize(800,700);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcome = new javax.swing.JLabel();
        lblProduct = new javax.swing.JLabel();
        txtProduct = new javax.swing.JTextField();
        bttnProduct = new javax.swing.JButton();
        lblQuantity = new javax.swing.JLabel();
        spQuantity = new javax.swing.JSpinner();
        bttnCreateOrderLine = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        lblOrderLines = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblOrderLines = new javax.swing.JTable();
        bttnBack = new javax.swing.JButton();
        bttnConfirm = new javax.swing.JButton();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        lblWelcome.setFont(new java.awt.Font("Roboto Black", 1, 48)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(102, 102, 102));
        lblWelcome.setText("SELECCIONAR PRODUCTOS");

        lblProduct.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        lblProduct.setForeground(new java.awt.Color(0, 0, 0));
        lblProduct.setText("Producto");

        bttnProduct.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        bttnProduct.setText("Buscar");
        bttnProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnProductActionPerformed(evt);
            }
        });

        lblQuantity.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        lblQuantity.setForeground(new java.awt.Color(0, 0, 0));
        lblQuantity.setText("Cantidad");

        spQuantity.setMaximumSize(new java.awt.Dimension(5555, 5555));
        spQuantity.setName(""); // NOI18N

        bttnCreateOrderLine.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        bttnCreateOrderLine.setText("Agregar");
        bttnCreateOrderLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnCreateOrderLineActionPerformed(evt);
            }
        });

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tblProducts);

        lblOrderLines.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        lblOrderLines.setForeground(new java.awt.Color(0, 0, 0));
        lblOrderLines.setText("Lineas de pedido");

        tblOrderLines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tblOrderLines);

        bttnBack.setBackground(new java.awt.Color(204, 0, 0));
        bttnBack.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        bttnBack.setForeground(new java.awt.Color(255, 255, 255));
        bttnBack.setText("Cancelar");
        bttnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnBackActionPerformed(evt);
            }
        });

        bttnConfirm.setBackground(new java.awt.Color(0, 102, 255));
        bttnConfirm.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        bttnConfirm.setForeground(new java.awt.Color(255, 255, 255));
        bttnConfirm.setText("Confirmar");
        bttnConfirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(lblWelcome))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bttnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblOrderLines)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblProduct)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bttnProduct)
                                .addGap(16, 16, 16)
                                .addComponent(lblQuantity)
                                .addGap(18, 18, 18)
                                .addComponent(spQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(bttnCreateOrderLine))
                            .addComponent(jScrollPane5)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProduct)
                    .addComponent(lblQuantity)
                    .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnCreateOrderLine, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblOrderLines)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bttnProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnProductActionPerformed
        tblProducts.setModel(viewController.modelTableProductsByName(txtProduct.getText()));
    }//GEN-LAST:event_bttnProductActionPerformed

    private void bttnCreateOrderLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnCreateOrderLineActionPerformed
        OrderLine oL = new OrderLine();
        if(tblProducts.getRowCount() > 0){
            if(tblProducts.getSelectedRow()!=-1){
                if(Integer.parseInt(spQuantity.getValue().toString()) > 0){
                    Long idProduct = Long.parseLong(String.valueOf(tblProducts.getValueAt(tblProducts.getSelectedRow(),0)));
                    oL.setQuantity(Integer.parseInt(spQuantity.getValue().toString()));
                    oL.setProduct(productController.findOneById(idProduct));
                    orderLineController.create(oL);
                    order.getOrderLines().add(oL);
                    
                }
             }
        }
        tblOrderLines.setModel(loadOrderLines());
    }//GEN-LAST:event_bttnCreateOrderLineActionPerformed

    private void bttnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnBackActionPerformed
        ViewController.panelChange(this, new PanelCreateOrder2(cuitCustomer, cuitCarrier), this);
    }//GEN-LAST:event_bttnBackActionPerformed

    private void bttnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnConfirmActionPerformed
        if(order.getOrderLines().isEmpty()){
            JOptionPane.showMessageDialog(this, "Su pedido no tiene productos!", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            JOptionPane.showMessageDialog(this, "Pedido creado con exito", "Creación exitosa", JOptionPane.INFORMATION_MESSAGE);
            orderController.createOrder(order, warehouseOrig,warehouseDest, cuitCustomer, cuitCarrier);
            ViewController.panelChange(this, new PanelOrder(), this);
        }
 

    }//GEN-LAST:event_bttnConfirmActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        this.loadData();
    }//GEN-LAST:event_formAncestorAdded
    private void loadData(){
        this.tblProducts.setModel(viewController.modelTableProducts());
        this.tblOrderLines.setModel(loadOrderLines());
                SpinnerModel model = new SpinnerNumberModel(
            0,  // Valor inicial
            0,                   // Valor mínimo
            Integer.MAX_VALUE,   // Valor máximo
            1                    // Paso
        );
        this.spQuantity.setModel(model);
    }
    private TableModel loadOrderLines(){
        DefaultTableModel modeloNuevo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };

        String titulos[] = {"Id", "Producto", "Cantidad"};
        modeloNuevo.setColumnIdentifiers(titulos);
        if(!order.getOrderLines().isEmpty()){
            for (OrderLine e: order.getOrderLines()){
                Object[] obj = {e.getId(), e.getProduct().getName(), e.getQuantity()};
                modeloNuevo.addRow(obj);
            }
        }
        return modeloNuevo;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnBack;
    private javax.swing.JButton bttnConfirm;
    private javax.swing.JButton bttnCreateOrderLine;
    private javax.swing.JButton bttnProduct;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblOrderLines;
    private javax.swing.JLabel lblProduct;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JSpinner spQuantity;
    private javax.swing.JTable tblOrderLines;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtProduct;
    // End of variables declaration//GEN-END:variables
}
